{"version":3,"sources":["components/ImageWithLoading/index.jsx","scenes/Movie/components/Info/index.jsx","scenes/Movie/components/Body/index.jsx","scenes/Movie/presenter.jsx","services/axios.js","services/movie/api.js","scenes/Movie/index.jsx","scenes/Movies/components/SearchForm/presenter.jsx","services/filter/slice.js","services/movie/slice.js","scenes/Movies/components/SearchForm/index.jsx","scenes/Movies/components/Description/index.jsx","scenes/Movies/components/FilterForm/components/Chip/index.jsx","scenes/Movies/components/FilterForm/presenter.jsx","scenes/Movies/components/FilterForm/index.jsx","scenes/Movies/components/SearchMetaData/index.jsx","scenes/Movies/components/List/components/ListItem/index.jsx","scenes/Movies/components/List/components/Pagination/presenter.jsx","scenes/Movies/components/List/components/Pagination/index.jsx","scenes/Movies/components/List/index.jsx","scenes/Movies/presenter.jsx","scenes/Movies/index.jsx","components/GithubCorner/index.jsx","App.jsx","store.js","serviceWorker.js","index.jsx"],"names":["ImageWithLoading","src","alt","height","useState","imgLoading","setImgLoading","style","width","display","objectFit","onLoad","onError","Skeleton","variant","Info","label","value","first","Box","mt","Typography","component","fontWeight","mr","Body","entity","Grid","container","spacing","item","xs","sm","md","Poster","Title","mb","gutterBottom","color","Type","toUpperCase","Year","Plot","Array","from","map","_","i","key","Director","Writer","Actors","my","Ratings","slice","rating","Fragment","Source","Divider","orientation","flexItem","py","textAlign","Value","margin","Awards","Rated","Released","Runtime","Genre","Language","Country","DVD","BoxOffice","Production","Movie","error","Container","Button","startIcon","Link","to","axios","defaults","baseURL","interceptors","request","use","config","params","apikey","process","Promise","reject","handleError","console","fetchBySearch","a","searchTerm","page","type","get","s","data","response","Response","Error","result","fetchByID","id","plot","movie","setMovie","setError","useParams","useEffect","moviAPI","message","fetchMovie","useStyles","makeStyles","theme","root","padding","alignItems","maxWidth","input","marginLeft","flex","iconButton","divider","SearchForm","setInput","onSubmit","onReset","classes","Paper","className","InputBase","placeholder","inputProps","onChange","e","target","autoFocus","IconButton","aria-label","createSlice","name","initialState","reducers","setSearchTerm","state","action","payload","resetSearch","setPage","setType","resetType","actions","fetchMoviesBySearch","createAsyncThunk","movieAPI","entities","totalEntities","loading","resetMovies","extraReducers","pending","fulfilled","Search","totalResults","rejected","useSelector","filter","shallowEqual","dispatch","useDispatch","preventDefault","length","Description","Chip","icon","onClick","onDelete","flexWrap","marginRight","FilterForm","onFilter","onResetFilter","onClickHandler","selectedType","onDeleteHandler","SearchMetaData","cursor","ListItem","history","useHistory","imdbID","push","fontSize","lineHeight","ul","justifyContent","Pagination","count","onPageChange","size","showFirstButton","showLastButton","year","Math","ceil","selectedPage","gridTemplateColumns","gridColumnGap","gridRowGap","marginBottom","List","Movies","hasNotSearchedAnything","role","GithubCorner","url","fill","href","rel","viewBox","aria-hidden","d","App","path","exact","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b846ecf8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Skeleton from '@material-ui/lab/Skeleton'\n\nconst ImageWithLoading = ({ src, alt, height }) => {\n  const [imgLoading, setImgLoading] = useState(true)\n\n  return (\n    <>\n      {src && (\n        <img\n          style={{\n            width: '100%',\n            display: imgLoading ? 'none' : 'block',\n            height: height || 'auto',\n            objectFit: 'cover',\n          }}\n          src={src}\n          alt={alt || 'Movie poster'}\n          onLoad={() => setImgLoading(false)}\n          onError={() => setImgLoading(false)}\n        />\n      )}\n      {imgLoading && <Skeleton variant='rect' height={height || 350} />}\n    </>\n  )\n}\n\nexport default ImageWithLoading\n","import React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport Typography from '@material-ui/core/Typography'\n\nconst Info = ({ label, value, first }) => {\n  return (\n    <Box mt={first ? 0 : 2}>\n      {value ? (\n        <Typography variant='body1'>\n          <Box component='span' display='flex'>\n            <Box component='span' fontWeight='fontWeightBold' mr={1.5}>\n              {label}:\n            </Box>\n            <span>{value}</span>\n          </Box>\n        </Typography>\n      ) : (\n        <Skeleton width='80%' />\n      )}\n    </Box>\n  )\n}\n\nexport default Info\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport Divider from '@material-ui/core/Divider'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport ImageWithLoading from '../../../../components/ImageWithLoading'\nimport Info from '../Info'\n\nconst Body = ({ entity }) => {\n  return (\n    <>\n      <Grid container spacing={5}>\n        <Grid item xs={12} sm={5} md={3}>\n          <ImageWithLoading src={entity?.Poster} alt={entity?.Title} />\n        </Grid>\n        <Grid item xs={12} sm={7} md={9}>\n          <Box mb={2}>\n            <Typography variant='h4' gutterBottom>\n              {entity ? entity.Title : <Skeleton width='60%' />}\n            </Typography>\n            <Typography variant='subtitle1' color='textSecondary'>\n              {entity ? (\n                `${entity.Type.toUpperCase()} • ${entity.Year}`\n              ) : (\n                <Skeleton width='20%' />\n              )}\n            </Typography>\n          </Box>\n          <Typography variant='body1'>\n            {entity ? (\n              entity.Plot\n            ) : (\n              <>\n                {Array.from(new Array(3)).map((_, i) => (\n                  <Skeleton key={i} />\n                ))}\n                <Skeleton width='50%' />\n              </>\n            )}\n          </Typography>\n          <Box mt={3}>\n            <Info label='Director' value={entity?.Director} first />\n            <Info label='Writer' value={entity?.Writer} />\n            <Info label='Actors' value={entity?.Actors} />\n          </Box>\n        </Grid>\n      </Grid>\n      <Box my={7}>\n        <Grid container spacing={3}>\n          {(entity ? entity.Ratings.slice(0, 3) : Array.from(new Array(3))).map(\n            (rating, i) => (\n              <React.Fragment key={rating?.Source || i}>\n                {!!i && <Divider orientation='vertical' flexItem />}\n                <Grid item xs>\n                  <Box py={2}>\n                    <Typography variant='h5' gutterBottom component='div'>\n                      <Box textAlign='center'>\n                        {rating ? (\n                          rating.Value\n                        ) : (\n                          <Skeleton width='40%' style={{ margin: 'auto' }} />\n                        )}\n                      </Box>\n                    </Typography>\n                    <Typography variant='body1' component='div'>\n                      <Box textAlign='center'>\n                        {rating ? (\n                          rating.Source\n                        ) : (\n                          <Skeleton width='80%' style={{ margin: 'auto' }} />\n                        )}\n                      </Box>\n                    </Typography>\n                  </Box>\n                </Grid>\n              </React.Fragment>\n            )\n          )}\n        </Grid>\n      </Box>\n      <Box mt={3}>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            <Info label='Awards' value={entity?.Awards} first />\n            <Info label='Rating' value={entity?.Rated} />\n            <Info label='Release Date' value={entity?.Released} />\n            <Info label='Runtime' value={entity?.Runtime} />\n            <Info label='Genre' value={entity?.Genre} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Info label='Language' value={entity?.Language} first />\n            <Info label='Country' value={entity?.Country} />\n            <Info label='DVD Release Date' value={entity?.DVD} />\n            <Info label='Box Office Collection' value={entity?.BoxOffice} />\n            <Info label='Production' value={entity?.Production} />\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  )\n}\n\nexport default Body\n","import React from 'react'\nimport Container from '@material-ui/core/Container'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Body from './components/Body'\n\nconst Movie = ({ entity, error }) => {\n  return (\n    <Container>\n      <Box mb={5}>\n        <Button startIcon={<ArrowBackIosIcon />} component={Link} to='/'>\n          Back to search\n        </Button>\n      </Box>\n      {error ? (\n        <Typography variant='body1' color='textSecondary'>\n          {error}\n        </Typography>\n      ) : (\n        <Body entity={entity} />\n      )}\n    </Container>\n  )\n}\n\nexport default Movie\n","import axios from 'axios'\n\naxios.defaults.baseURL = 'https://www.omdbapi.com/'\naxios.interceptors.request.use(\n  (config) => {\n    config.params = {\n      apikey: process.env.REACT_APP_API_KEY,\n      ...config.params,\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\nexport default axios\n","import axios from '../axios'\n\nconst handleError = (error) => console.error('[API]', error)\n\nconst fetchBySearch = async (searchTerm = '', page = 1, type = '') => {\n  const { data } = await axios.get('/', {\n    params: {\n      s: searchTerm,\n      page,\n      type,\n    },\n  })\n  const { Response: response, Error: error, ...result } = data\n\n  if (response === 'False') {\n    handleError(error)\n    throw new Error('No results found')\n  }\n\n  return result\n}\n\nconst fetchByID = async (id) => {\n  const { data } = await axios.get('/', {\n    params: {\n      i: id,\n      plot: 'full',\n    },\n  })\n  const { Response: response, Error: error, ...result } = data\n\n  if (response === 'False') {\n    handleError(error)\n    throw new Error('No result found')\n  }\n\n  return result\n}\n\nexport default {\n  fetchBySearch,\n  fetchByID,\n}\n","import React, { useState, useEffect } from 'react'\nimport Movie from './presenter'\nimport moviAPI from '../../services/movie/api'\nimport { useParams } from 'react-router-dom'\n\nexport default () => {\n  const [movie, setMovie] = useState()\n  const [error, setError] = useState()\n  const { id } = useParams()\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      let result\n      try {\n        result = await moviAPI.fetchByID(id)\n        setError()\n      } catch (error) {\n        setError(error.message)\n      }\n      setMovie(result)\n    }\n    fetchMovie()\n  }, [id])\n\n  return <Movie entity={movie} error={error} />\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Clear'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px 2px 10px',\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: 600,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}))\n\nconst SearchForm = ({\n  input,\n  setInput,\n  error,\n  searchTerm,\n  onSubmit,\n  onReset,\n}) => {\n  const classes = useStyles()\n\n  return (\n    <Paper\n      component='form'\n      className={classes.root}\n      onSubmit={onSubmit}\n      onReset={onReset}>\n      <InputBase\n        className={classes.input}\n        placeholder='Search movies'\n        inputProps={{ 'aria-label': 'search movies' }}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        autoFocus\n      />\n      {searchTerm && (\n        <IconButton\n          className={classes.iconButton}\n          aria-label='clear'\n          type='reset'>\n          <ClearIcon />\n        </IconButton>\n      )}\n      <Divider className={classes.divider} orientation='vertical' />\n      <IconButton\n        className={classes.iconButton}\n        aria-label='search'\n        type='submit'>\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nexport default SearchForm\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst sliceName = 'filter'\n\nexport const slice = createSlice({\n  name: sliceName,\n  initialState: {\n    searchTerm: '',\n    page: 1,\n    type: '',\n  },\n  reducers: {\n    setSearchTerm: (state, action) => ({\n      ...state,\n      searchTerm: action.payload,\n      page: 1,\n    }),\n    resetSearch: () => ({\n      searchTerm: '',\n      page: 1,\n      type: '',\n    }),\n    setPage: (state, action) => ({\n      ...state,\n      page: action.payload,\n    }),\n    setType: (state, action) => ({\n      ...state,\n      type: action.payload,\n      page: 1,\n    }),\n    resetType: (state) => ({\n      ...state,\n      type: '',\n      page: 1,\n    }),\n  },\n})\n\nexport const {\n  setSearchTerm,\n  resetSearch,\n  setPage,\n  setType,\n  resetType,\n} = slice.actions\n\nexport default slice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport movieAPI from './api'\n\nconst sliceName = 'movie'\n\nexport const fetchMoviesBySearch = createAsyncThunk(\n  `${sliceName}/fetchMoviesBySearch`,\n  async ({ searchTerm, page, type }) => {\n    const result = await movieAPI.fetchBySearch(searchTerm, page, type)\n    return result\n  }\n)\n\nexport const slice = createSlice({\n  name: sliceName,\n  initialState: {\n    entities: [],\n    totalEntities: 0,\n    error: '',\n    loading: false,\n  },\n  reducers: {\n    resetMovies: (state) => ({\n      ...state,\n      entities: [],\n      totalEntities: 0,\n      error: '',\n    }),\n  },\n  extraReducers: {\n    [fetchMoviesBySearch.pending]: (state) => {\n      state.loading = true\n    },\n    [fetchMoviesBySearch.fulfilled]: (state, action) => {\n      state.entities = action.payload.Search\n      state.totalEntities = action.payload.totalResults\n      state.error = ''\n      state.loading = false\n    },\n    [fetchMoviesBySearch.rejected]: (state, action) => {\n      state.entities = []\n      state.totalEntities = 0\n      state.error = action.error.message\n      state.loading = false\n    },\n  },\n})\n\nexport const { resetMovies } = slice.actions\n\nexport default slice.reducer\n","import React, { useState, useEffect } from 'react'\nimport SearchForm from './presenter'\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport { setSearchTerm, resetSearch } from '../../../../services/filter/slice'\nimport {\n  fetchMoviesBySearch,\n  resetMovies,\n} from '../../../../services/movie/slice'\n\nexport default () => {\n  const { searchTerm, page, type } = useSelector(\n    (state) => state.filter,\n    shallowEqual\n  )\n  const dispatch = useDispatch()\n  const [input, setInput] = useState('')\n  const [error, setError] = useState()\n\n  useEffect(() => {\n    setInput(searchTerm)\n  }, [searchTerm])\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault()\n    setError('')\n    if (input.length < 3) {\n      setError('minimum 3 chars')\n      return\n    }\n    dispatch(setSearchTerm(input))\n    dispatch(fetchMoviesBySearch({ searchTerm: input, page, type }))\n  }\n\n  const onResetHandler = (e) => {\n    e.preventDefault()\n    setInput('')\n    setError()\n    dispatch(resetSearch())\n    dispatch(resetMovies())\n  }\n\n  return (\n    <SearchForm\n      input={input}\n      setInput={setInput}\n      error={error}\n      searchTerm={searchTerm}\n      onSubmit={onSubmitHandler}\n      onReset={onResetHandler}\n    />\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Description = () => {\n  return (\n    <Typography variant='subtitle1'>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nesciunt labore\n      nihil non hic distinctio harum voluptas sequi quidem asperiores sunt\n      dolorum, maiores maxime a nam tempora ipsum fugit nemo! Recusandae?\n      Veritatis ex dolore magni atque quisquam voluptatem, delectus assumenda\n      officiis nobis explicabo odio alias cupiditate sunt nesciunt labore autem.\n      Iusto, quisquam.\n    </Typography>\n  )\n}\n\nexport default Description\n","import React from 'react'\nimport MuiChip from '@material-ui/core/Chip'\n\nconst Chip = ({ value, label, icon, type, onClick, onDelete }) => {\n  return (\n    <MuiChip\n      label={label}\n      icon={icon}\n      color={type === value ? 'secondary' : 'default'}\n      onClick={() => onClick(value)}\n      onDelete={type === value ? onDelete : null}\n    />\n  )\n}\n\nexport default Chip\n","import React from 'react'\nimport MovieIcon from '@material-ui/icons/Movie'\nimport ViewCarouselIcon from '@material-ui/icons/ViewCarousel'\nimport TvIcon from '@material-ui/icons/Tv'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Chip from './components/Chip'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      marginRight: theme.spacing(1),\n    },\n  },\n}))\n\nconst FilterForm = ({ type, onFilter, onResetFilter }) => {\n  const classes = useStyles()\n\n  const onClickHandler = (selectedType) => {\n    if (selectedType !== type) {\n      onFilter(selectedType)\n    }\n  }\n\n  const onDeleteHandler = () => {\n    if (type) {\n      onResetFilter()\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Chip\n        value='movie'\n        label='Movie'\n        icon={<MovieIcon />}\n        type={type}\n        onClick={onClickHandler}\n        onDelete={onDeleteHandler}\n      />\n      <Chip\n        value='series'\n        label='Series'\n        icon={<ViewCarouselIcon />}\n        type={type}\n        onClick={onClickHandler}\n        onDelete={onDeleteHandler}\n      />\n      <Chip\n        value='episode'\n        label='Episode'\n        icon={<TvIcon />}\n        type={type}\n        onClick={onClickHandler}\n        onDelete={onDeleteHandler}\n      />\n    </div>\n  )\n}\n\nexport default FilterForm\n","import React from 'react'\nimport FilterForm from './presenter'\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport { setType, resetType } from '../../../../services/filter/slice'\nimport { fetchMoviesBySearch } from '../../../../services/movie/slice'\n\nexport default () => {\n  const { searchTerm, page, type } = useSelector(\n    (state) => state.filter,\n    shallowEqual\n  )\n  const dispatch = useDispatch()\n\n  const onFilterHandler = (selectedType) => {\n    dispatch(setType(selectedType))\n    dispatch(fetchMoviesBySearch({ searchTerm, page, type: selectedType }))\n  }\n\n  const onResetFilterHandler = () => {\n    dispatch(resetType())\n    dispatch(fetchMoviesBySearch({ searchTerm, page, type: '' }))\n  }\n\n  return (\n    <FilterForm\n      type={type}\n      onFilter={onFilterHandler}\n      onResetFilter={onResetFilterHandler}\n    />\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Skeleton from '@material-ui/lab/Skeleton'\n\nconst SearchMetaData = ({ totalEntities, error, loading }) => {\n  return loading ? (\n    <Skeleton height={20} width='25%' />\n  ) : (\n    <Typography variant='body2' color='textSecondary'>\n      {error || `${totalEntities} results found`}\n    </Typography>\n  )\n}\n\nexport default SearchMetaData\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ImageWithLoading from '../../../../../../components/ImageWithLoading'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    cursor: 'pointer',\n  },\n}))\n\nconst ListItem = ({ entity }) => {\n  const classes = useStyles()\n  const history = useHistory()\n\n  const goToDetails = (id) => {\n    history.push(`/${id}`)\n  }\n\n  return (\n    <div\n      className={entity ? classes.root : null}\n      onClick={entity ? () => goToDetails(entity.imdbID) : null}>\n      <ImageWithLoading src={entity?.Poster} alt={entity?.Title} height={350} />\n      <Typography component='div'>\n        <Box fontSize={17} lineHeight='normal' my={1}>\n          {entity ? entity.Title : <Skeleton />}\n        </Box>\n      </Typography>\n      <Typography variant='body2' color='textSecondary'>\n        {entity ? (\n          `${entity.Type.toUpperCase()} • ${entity.Year}`\n        ) : (\n          <Skeleton width='60%' />\n        )}\n      </Typography>\n    </div>\n  )\n}\n\nexport default ListItem\n","import React from 'react'\nimport MuiPagination from '@material-ui/lab/Pagination'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n  ul: {\n    justifyContent: 'center',\n  },\n}))\n\nconst Pagination = ({ count, page, onPageChange }) => {\n  const classes = useStyles()\n\n  return (\n    <MuiPagination\n      count={count}\n      page={page}\n      onChange={onPageChange}\n      size='large'\n      showFirstButton\n      showLastButton\n      classes={classes}\n      color='secondary'\n    />\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport Pagination from './presenter'\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\nimport { setPage } from '../../../../../../services/filter/slice'\nimport { fetchMoviesBySearch } from '../../../../../../services/movie/slice'\n\nexport default () => {\n  const { searchTerm, page, type, year } = useSelector(\n    (state) => state.filter,\n    shallowEqual\n  )\n  const count = useSelector((state) =>\n    Math.ceil(state.movie.totalEntities / 10)\n  )\n  const dispatch = useDispatch()\n\n  const onPageChangeHandler = (_, selectedPage) => {\n    dispatch(setPage(selectedPage))\n    dispatch(\n      fetchMoviesBySearch({ searchTerm, page: selectedPage, type, year })\n    )\n  }\n\n  return (\n    count > 1 && (\n      <Pagination\n        count={count}\n        page={page}\n        onPageChange={onPageChangeHandler}\n      />\n    )\n  )\n}\n","import React from 'react'\nimport ListItem from './components/ListItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Pagination from './components/Pagination'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr));',\n    gridColumnGap: theme.spacing(4),\n    gridRowGap: theme.spacing(8),\n    marginBottom: theme.spacing(8),\n  },\n}))\n\nconst List = ({ entities, loading }) => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <div className={classes.root}>\n        {(loading ? Array.from(new Array(6)) : entities).map((entity, i) => (\n          <ListItem entity={entity} key={entity?.imdbID || i} />\n        ))}\n      </div>\n      {!loading && <Pagination />}\n    </>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport SearchForm from './components/SearchForm'\nimport Description from './components/Description'\nimport FilterForm from './components/FilterForm'\nimport SearchMetaData from './components/SearchMetaData'\nimport List from './components/List'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Container from '@material-ui/core/Container'\n\nconst Movies = ({ entities, totalEntities, error, loading }) => {\n  const hasNotSearchedAnything = !(totalEntities || error || loading)\n\n  return (\n    <>\n      <Container>\n        <Typography variant='h2' gutterBottom>\n          <span role='img' aria-label='popcorn emoji'>\n            🍿\n          </span>\n          Movies\n        </Typography>\n        <SearchForm />\n      </Container>\n      {hasNotSearchedAnything ? (\n        <Box mt={3}>\n          <Container>\n            <Description />\n          </Container>\n        </Box>\n      ) : (\n        <>\n          <Box my={3}>\n            <Container>\n              <FilterForm />\n            </Container>\n          </Box>\n          <Divider />\n          <Container>\n            <Box mt={3} mb={5}>\n              <SearchMetaData\n                totalEntities={totalEntities}\n                error={error}\n                loading={loading}\n              />\n            </Box>\n            <List entities={entities} loading={loading} />\n          </Container>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Movies\n","import React from 'react'\nimport Movies from './presenter'\nimport { useSelector, shallowEqual } from 'react-redux'\n\nexport default () => {\n  const { entities, totalEntities, error, loading } = useSelector(\n    (state) => state.movie,\n    shallowEqual\n  )\n\n  return (\n    <Movies\n      entities={entities}\n      totalEntities={totalEntities}\n      error={error}\n      loading={loading}\n    />\n  )\n}\n","import React from 'react'\nimport './index.css'\n\nconst GithubCorner = ({\n  url = 'https://github.com/batbrain9392',\n  fill = '#24292e',\n  color = '#fff',\n}) => {\n  return (\n    <a\n      href={url}\n      target='_blank'\n      rel='noreferrer noopener'\n      className='github-corner'\n      aria-label='View source on GitHub'>\n      <svg\n        width='80'\n        height='80'\n        viewBox='0 0 250 250'\n        style={{\n          fill,\n          color,\n        }}\n        aria-hidden='true'>\n        <path d='M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z'></path>\n        <path\n          d='M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2'\n          fill='currentColor'\n          className='octo-arm'></path>\n        <path\n          d='M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z'\n          fill='currentColor'\n          className='octo-body'></path>\n      </svg>\n    </a>\n  )\n}\n\nexport default GithubCorner\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Movie from './scenes/Movie'\r\nimport Movies from './scenes/Movies'\r\nimport GithubCorner from './components/GithubCorner'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GithubCorner url='https://github.com/batbrain9392/redux-tutorial' />\r\n      <BrowserRouter>\r\n        <Box mt={5} mb={10}>\r\n          <Switch>\r\n            <Route path='/:id' component={Movie} />\r\n            <Route path='/' exact component={Movies} />\r\n          </Switch>\r\n        </Box>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport filter from './services/filter/slice'\r\nimport movie from './services/movie/slice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    filter,\r\n    movie,\r\n  },\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}